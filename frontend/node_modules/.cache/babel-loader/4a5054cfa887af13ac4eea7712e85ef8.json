{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somus\\\\Main Project\\\\frontend\\\\src\\\\pages\\\\Exercises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useExerciseContext } from \"../hooks/useExerciseContext\";\nimport ExercisesTable from '../components/ExercisesTable';\nimport ColorSelect from '../components/ColorSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Exercises() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [color, setColor] = useState(null);\n  const [error, setError] = useState(null);\n  const {\n    exercises,\n    dispatch\n  } = useExerciseContext();\n  const {\n    user,\n    isLoaded\n  } = useAuthContext();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n\n    if (!name || !color) {\n      setError(\"Fields must not be empty\");\n      return;\n    }\n\n    const response = await fetch(\"/api/exercise\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${user.token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        color\n      })\n    });\n    const result = await response.json();\n\n    if (!response.ok) {\n      console.log(result.error);\n      setError(result.error);\n    }\n\n    if (response.ok) {\n      dispatch({\n        type: \"CREATE_EXERCISE\",\n        payload: result\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isLoaded) {\n      fetch(\"/api/exercise\", {\n        headers: {\n          \"Authorization\": `Bearer ${user.token}`\n        }\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        dispatch({\n          type: \"SET_EXERCISES\",\n          payload: result\n        });\n      }).catch(e => console.log(e));\n    }\n  }, [isLoaded, user, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container exercises-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"exercises\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new exercise \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exercise\",\n          children: \"Exercise name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"exercise\",\n          type: \"text\",\n          onChange: e => setName(e.target.value),\n          value: name,\n          autoComplete: \"off\",\n          autoFocus: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorSelect, {\n        setColor: setColor,\n        className: \"form-group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExercisesTable, {\n      exercises: exercises,\n      error: error,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Exercises, \"XkhgbLPb3t+vKrHoi0Zq/UDI4Ow=\", false, function () {\n  return [useExerciseContext, useAuthContext];\n});\n\n_c = Exercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","useExerciseContext","ExercisesTable","ColorSelect","Exercises","name","setName","color","setColor","error","setError","exercises","dispatch","user","isLoaded","handleSubmit","e","preventDefault","response","fetch","method","headers","token","body","JSON","stringify","result","json","ok","console","log","type","payload","then","catch","target","value"],"sources":["C:/Users/somus/Main Project/frontend/src/pages/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\nimport { useExerciseContext } from \"../hooks/useExerciseContext\"\r\nimport ExercisesTable from '../components/ExercisesTable'\r\nimport ColorSelect from '../components/ColorSelect'\r\n\r\n\r\nexport default function Exercises() {\r\n  const [name, setName] = useState(\"\")\r\n  const [color, setColor] = useState(null)\r\n  const [error, setError] = useState(null);\r\n\r\n  const { exercises, dispatch } = useExerciseContext()\r\n  const { user, isLoaded } = useAuthContext()\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setError(null)\r\n\r\n    if (!name || !color) {\r\n      setError(\"Fields must not be empty\")\r\n      return\r\n    }\r\n\r\n    const response = await fetch(\"/api/exercise\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${user.token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ name, color })\r\n    })\r\n\r\n    const result = await response.json()\r\n\r\n    if (!response.ok) {\r\n      console.log(result.error)\r\n      setError(result.error)\r\n    }\r\n    if (response.ok) {\r\n      dispatch({ type: \"CREATE_EXERCISE\", payload: result })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      fetch(\"/api/exercise\", {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${user.token}`\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        dispatch({ type: \"SET_EXERCISES\", payload: result })\r\n      })\r\n      .catch(e => console.log(e))\r\n    } \r\n  }, [isLoaded, user, dispatch])\r\n\r\n  return (\r\n    <div className='container exercises-container'>\r\n      <form className=\"exercises\" onSubmit={handleSubmit}>\r\n        <h2>Create a new exercise </h2>\r\n        <div className='form-group'>\r\n          <label htmlFor='exercise'>Exercise name: </label>\r\n          <input \r\n            id='exercise'\r\n            type=\"text\"\r\n            onChange={ (e) => setName(e.target.value)}\r\n            value={name}\r\n            autoComplete=\"off\"\r\n            autoFocus=\"on\"\r\n          />\r\n        </div>\r\n        <ColorSelect \r\n          setColor={setColor}\r\n          className={\"form-group\"}\r\n        />\r\n        <button>Add</button>\r\n      </form>\r\n      <ExercisesTable \r\n        exercises={exercises}\r\n        error={error}\r\n        setError={setError}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}