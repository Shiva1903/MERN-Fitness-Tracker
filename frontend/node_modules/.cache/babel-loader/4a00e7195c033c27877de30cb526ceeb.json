{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somus\\\\Main Project\\\\frontend\\\\src\\\\components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useWorkoutContext } from \"../hooks/useWorkoutContext\";\nimport { useGetWeekDates } from \"../hooks/useGetWeekDates\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    }\n  }\n};\nconst labels = ['Sunday', 'Monday', 'Tuesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    modifier\n  } = _ref;\n  const {\n    workouts\n  } = useWorkoutContext();\n  const [data, setData] = useState({\n    labels,\n    datasets: []\n  });\n  const getWeekDates = useGetWeekDates();\n  useEffect(() => {\n    const [startDate, endDate] = getWeekDates(modifier * 7);\n    const weeklyWorkouts = workouts.filter(workout => {\n      const date = new Date(workout.updatedAt);\n      return date > startDate && date < endDate;\n    });\n    const newDatasets = [];\n    weeklyWorkouts.forEach(workout => {\n      if (newDatasets.length === 0) {\n        newDatasets.push({\n          label: workout.exercise[0].name,\n          data: [0, 0, 0, 0, 0, 0, 0],\n          backgroundColor: workout.exercise[0].color\n        });\n      } else {\n        let isSeen = false;\n        newDatasets.forEach(dataset => {\n          if (dataset.label === workout.exercise[0].name) {\n            isSeen = true;\n          }\n        });\n\n        if (isSeen === false) {\n          newDatasets.push({\n            label: workout.exercise[0].name,\n            data: [0, 0, 0, 0, 0, 0, 0],\n            backgroundColor: workout.exercise[0].color\n          });\n        }\n      }\n    });\n    weeklyWorkouts.forEach(workout => {\n      const day = new Date(workout.createdAt).getDay();\n      newDatasets.forEach(dataset => {\n        if (dataset.label === workout.exercise[0].name) {\n          dataset.data[day] += workout.time;\n        }\n      });\n    });\n    setData({\n      labels,\n      datasets: newDatasets\n    });\n  }, [workouts, modifier]);\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Chart, \"KdDBemv3aFSFPVTYzic4GsVJsyA=\", false, function () {\n  return [useWorkoutContext, useGetWeekDates];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useState","useEffect","useWorkoutContext","useGetWeekDates","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","options","responsive","plugins","legend","position","labels","modifier","workouts","data","setData","datasets","getWeekDates","startDate","endDate","weeklyWorkouts","filter","workout","date","Date","updatedAt","newDatasets","forEach","length","push","label","exercise","name","backgroundColor","color","isSeen","dataset","day","createdAt","getDay","time"],"sources":["C:/Users/somus/Main Project/frontend/src/components/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useWorkoutContext } from \"../hooks/useWorkoutContext\";\r\nimport { useGetWeekDates } from \"../hooks/useGetWeekDates\";\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['Sunday', 'Monday', 'Tuesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\n\r\n\r\nfunction Chart({ modifier }) {\r\n  const { workouts } = useWorkoutContext()\r\n  const [data, setData] = useState({\r\n    labels,\r\n    datasets: []\r\n  })\r\n  const getWeekDates =  useGetWeekDates()\r\n\r\n  useEffect(() => {\r\n    const [startDate, endDate] = getWeekDates(modifier * 7)\r\n    const weeklyWorkouts = workouts.filter((workout) => {\r\n      const date = new Date(workout.updatedAt)\r\n      return (date > startDate && date < endDate)\r\n    })\r\n\r\n    const newDatasets = []\r\n\r\n    weeklyWorkouts.forEach((workout) => {\r\n      if (newDatasets.length === 0) {\r\n        newDatasets.push({\r\n          label: workout.exercise[0].name,\r\n          data: [0,0,0,0,0,0,0],\r\n          backgroundColor: workout.exercise[0].color\r\n        })\r\n      } else {\r\n        let isSeen = false\r\n        newDatasets.forEach((dataset) => {\r\n          if (dataset.label === workout.exercise[0].name) {\r\n            isSeen = true\r\n          }\r\n        })\r\n        if (isSeen === false) {\r\n          newDatasets.push({\r\n            label: workout.exercise[0].name,\r\n            data: [0,0,0,0,0,0,0],\r\n            backgroundColor: workout.exercise[0].color\r\n          })\r\n        }\r\n      }\r\n    })\r\n\r\n    weeklyWorkouts.forEach((workout) => {\r\n      const day = new Date(workout.createdAt).getDay()\r\n      newDatasets.forEach((dataset) => {\r\n        if (dataset.label === workout.exercise[0].name) {\r\n          dataset.data[day] += workout.time\r\n        }\r\n      })\r\n    })\r\n\r\n    setData({\r\n      labels,\r\n      datasets: newDatasets\r\n    })\r\n    \r\n  }, [workouts, modifier])\r\n\r\n  return <Bar options={options} data={data} />\r\n  \r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;AASA,SAASC,GAAT,QAAoB,iBAApB;;AAEAP,OAAO,CAACQ,QAAR,CACEP,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF;AASA,MAAMG,OAAO,GAAG;EACdC,UAAU,EAAE,IADE;EAEdC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IADJ;EADD;AAFK,CAAhB;AASA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,UAAhC,EAA4C,QAA5C,EAAsD,UAAtD,EAAkE,QAAlE,CAAf;;AAIA,SAASf,KAAT,OAA6B;EAAA;;EAAA,IAAd;IAAEgB;EAAF,CAAc;EAC3B,MAAM;IAAEC;EAAF,IAAenB,iBAAiB,EAAtC;EACA,MAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC;IAC/BmB,MAD+B;IAE/BK,QAAQ,EAAE;EAFqB,CAAD,CAAhC;EAIA,MAAMC,YAAY,GAAItB,eAAe,EAArC;EAEAF,SAAS,CAAC,MAAM;IACd,MAAM,CAACyB,SAAD,EAAYC,OAAZ,IAAuBF,YAAY,CAACL,QAAQ,GAAG,CAAZ,CAAzC;IACA,MAAMQ,cAAc,GAAGP,QAAQ,CAACQ,MAAT,CAAiBC,OAAD,IAAa;MAClD,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,SAAjB,CAAb;MACA,OAAQF,IAAI,GAAGL,SAAP,IAAoBK,IAAI,GAAGJ,OAAnC;IACD,CAHsB,CAAvB;IAKA,MAAMO,WAAW,GAAG,EAApB;IAEAN,cAAc,CAACO,OAAf,CAAwBL,OAAD,IAAa;MAClC,IAAII,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B;QAC5BF,WAAW,CAACG,IAAZ,CAAiB;UACfC,KAAK,EAAER,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBC,IADZ;UAEflB,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAFS;UAGfmB,eAAe,EAAEX,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBG;QAHtB,CAAjB;MAKD,CAND,MAMO;QACL,IAAIC,MAAM,GAAG,KAAb;QACAT,WAAW,CAACC,OAAZ,CAAqBS,OAAD,IAAa;UAC/B,IAAIA,OAAO,CAACN,KAAR,KAAkBR,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBC,IAA1C,EAAgD;YAC9CG,MAAM,GAAG,IAAT;UACD;QACF,CAJD;;QAKA,IAAIA,MAAM,KAAK,KAAf,EAAsB;UACpBT,WAAW,CAACG,IAAZ,CAAiB;YACfC,KAAK,EAAER,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBC,IADZ;YAEflB,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAFS;YAGfmB,eAAe,EAAEX,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBG;UAHtB,CAAjB;QAKD;MACF;IACF,CAtBD;IAwBAd,cAAc,CAACO,OAAf,CAAwBL,OAAD,IAAa;MAClC,MAAMe,GAAG,GAAG,IAAIb,IAAJ,CAASF,OAAO,CAACgB,SAAjB,EAA4BC,MAA5B,EAAZ;MACAb,WAAW,CAACC,OAAZ,CAAqBS,OAAD,IAAa;QAC/B,IAAIA,OAAO,CAACN,KAAR,KAAkBR,OAAO,CAACS,QAAR,CAAiB,CAAjB,EAAoBC,IAA1C,EAAgD;UAC9CI,OAAO,CAACtB,IAAR,CAAauB,GAAb,KAAqBf,OAAO,CAACkB,IAA7B;QACD;MACF,CAJD;IAKD,CAPD;IASAzB,OAAO,CAAC;MACNJ,MADM;MAENK,QAAQ,EAAEU;IAFJ,CAAD,CAAP;EAKD,CA/CQ,EA+CN,CAACb,QAAD,EAAWD,QAAX,CA/CM,CAAT;EAiDA,oBAAO,QAAC,GAAD;IAAK,OAAO,EAAEN,OAAd;IAAuB,IAAI,EAAEQ;EAA7B;IAAA;IAAA;IAAA;EAAA,QAAP;AAED;;GA3DQlB,K;UACcF,iB,EAKCC,e;;;KANfC,K;AA6DT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}