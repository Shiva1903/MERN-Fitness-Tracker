{"ast":null,"code":"export function useGetWeekDates() {\n  const getWeekDates = function () {\n    let modifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let now = new Date();\n    now.setDate(now.getDate() + modifier);\n    let dayOfWeek = now.getDay();\n    let numDay = now.getDate();\n    let startDate = new Date(now);\n    startDate.setDate(numDay - dayOfWeek);\n    let endDate = new Date(now);\n    endDate.setDate(numDay + (7 - dayOfWeek));\n    endDate.setHours(0, 0, 0, 0);\n    return [startDate, endDate];\n  };\n\n  return getWeekDates;\n}","map":{"version":3,"names":["useGetWeekDates","getWeekDates","modifier","now","Date","setDate","getDate","dayOfWeek","getDay","numDay","startDate","endDate","setHours"],"sources":["C:/Users/somus/Main Project/frontend/src/hooks/useGetWeekDates.js"],"sourcesContent":["export function useGetWeekDates() {\r\n\r\n  const getWeekDates = (modifier = 0)  => {\r\n    let now = new Date()\r\n    now.setDate(now.getDate() + modifier)\r\n\r\n    let dayOfWeek = now.getDay()\r\n    let numDay = now.getDate()\r\n      \r\n    let startDate = new Date(now)\r\n    startDate.setDate(numDay - dayOfWeek)\r\n\r\n    let endDate = new Date(now);\r\n    endDate.setDate(numDay + (7 - dayOfWeek));\r\n    endDate.setHours(0,0,0,0)\r\n\r\n    return [startDate, endDate]\r\n  }\r\n\r\n  return getWeekDates\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,eAAT,GAA2B;EAEhC,MAAMC,YAAY,GAAG,YAAmB;IAAA,IAAlBC,QAAkB,uEAAP,CAAO;IACtC,IAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;IACAD,GAAG,CAACE,OAAJ,CAAYF,GAAG,CAACG,OAAJ,KAAgBJ,QAA5B;IAEA,IAAIK,SAAS,GAAGJ,GAAG,CAACK,MAAJ,EAAhB;IACA,IAAIC,MAAM,GAAGN,GAAG,CAACG,OAAJ,EAAb;IAEA,IAAII,SAAS,GAAG,IAAIN,IAAJ,CAASD,GAAT,CAAhB;IACAO,SAAS,CAACL,OAAV,CAAkBI,MAAM,GAAGF,SAA3B;IAEA,IAAII,OAAO,GAAG,IAAIP,IAAJ,CAASD,GAAT,CAAd;IACAQ,OAAO,CAACN,OAAR,CAAgBI,MAAM,IAAI,IAAIF,SAAR,CAAtB;IACAI,OAAO,CAACC,QAAR,CAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB;IAEA,OAAO,CAACF,SAAD,EAAYC,OAAZ,CAAP;EACD,CAfD;;EAiBA,OAAOV,YAAP;AACD"},"metadata":{},"sourceType":"module"}