{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somus\\\\Main Project\\\\frontend\\\\src\\\\pages\\\\Goals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ExerciseSelect from '../components/ExerciseSelect';\nimport Select from 'react-select';\nimport TimeInput from '../components/TimeInput';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGoalContext } from '../hooks/useGoalContext';\nimport GoalsTable from '../components/GoalsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Goals() {\n  _s();\n\n  const {\n    user,\n    isLoaded\n  } = useAuthContext();\n  const {\n    goals,\n    dispatch\n  } = useGoalContext();\n  const [goalType, setGoalType] = useState(null);\n  const [time, setTime] = useState(0);\n  const [frequency, setFrequency] = useState(0);\n  const [exercises, setExercises] = useState(null);\n  const [exercise, setExercise] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (isLoaded) {\n      fetch(\"/api/exercise\", {\n        headers: {\n          \"Authorization\": `Bearer ${user.token}`\n        }\n      }).then(response => response.json()).then(result => {\n        setExercises(result);\n      });\n      fetch(\"/api/goals\", {\n        headers: {\n          \"Authorization\": `Bearer ${user.token}`\n        }\n      }).then(response => response.json()).then(result => {\n        dispatch({\n          type: \"SET_GOALS\",\n          payload: result\n        });\n      });\n    }\n  }, [user, isLoaded, dispatch]);\n  const goalTypeOptions = [{\n    label: \"Frequency\",\n    value: \"frequency\"\n  }, {\n    label: \"Time\",\n    value: \"time\"\n  }];\n\n  const handleChangeExercise = e => {\n    setExercise(e.value);\n  };\n\n  const handleChangeGoalType = e => {\n    setGoalType(e.value);\n  };\n\n  const handleChangeFrequency = e => {\n    setFrequency(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n\n    if (!exercise || !goalType || !time && !frequency) {\n      setError(\"Fields must not be empty\");\n      return;\n    }\n\n    if (goalType === \"time\") {\n      setFrequency(null);\n    } else {\n      setTime(0);\n    }\n\n    const response = await fetch(\"/api/goals\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${user.token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        exercise,\n        goal_type: goalType,\n        time,\n        frequency\n      })\n    }).catch(err => {\n      console.log(err);\n    });\n    const result = await response.json();\n\n    if (!response.ok) {\n      console.log(result.error);\n      setError(result.error);\n    }\n\n    if (response.ok) {\n      dispatch({\n        type: \"CREATE_GOAL\",\n        payload: result\n      });\n      console.log(result);\n      e.target.reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container goals-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"goals\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set a new goal \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Exercise: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExerciseSelect, {\n          onChange: handleChangeExercise,\n          exercises: exercises\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Goal Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: goalTypeOptions,\n          onChange: handleChangeGoalType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), goalType === \"time\" && /*#__PURE__*/_jsxDEV(TimeInput, {\n        time: time,\n        setTime: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), goalType === \"frequency\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group time-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Weekly Goal: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: handleChangeFrequency,\n          placeholder: \"# times / week\",\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Set Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoalsTable, {\n      goals: goals,\n      error: error,\n      setError: setError,\n      exercises: exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Goals, \"bBrz0ReoXGnG3+xR8Ij7AikG8lA=\", false, function () {\n  return [useAuthContext, useGoalContext];\n});\n\n_c = Goals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useState","useEffect","ExerciseSelect","Select","TimeInput","useAuthContext","useGoalContext","GoalsTable","Goals","user","isLoaded","goals","dispatch","goalType","setGoalType","time","setTime","frequency","setFrequency","exercises","setExercises","exercise","setExercise","error","setError","fetch","headers","token","then","response","json","result","type","payload","goalTypeOptions","label","value","handleChangeExercise","e","handleChangeGoalType","handleChangeFrequency","target","handleSubmit","preventDefault","method","body","JSON","stringify","goal_type","catch","err","console","log","ok","reset"],"sources":["C:/Users/somus/Main Project/frontend/src/pages/Goals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ExerciseSelect from '../components/ExerciseSelect'\r\nimport Select from 'react-select'\r\nimport TimeInput from '../components/TimeInput'\r\n\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\nimport { useGoalContext } from '../hooks/useGoalContext'\r\nimport GoalsTable from '../components/GoalsTable'\r\n\r\nexport default function Goals() {\r\n  const { user, isLoaded } = useAuthContext()\r\n  const { goals, dispatch } = useGoalContext()\r\n\r\n  const [goalType, setGoalType] = useState(null)\r\n  const [time, setTime] = useState(0)\r\n  const [frequency, setFrequency] = useState(0)\r\n  const [exercises, setExercises] = useState(null)\r\n  const [exercise, setExercise] = useState(null)  \r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      fetch(\"/api/exercise\", {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${user.token}`\r\n        }\r\n      })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setExercises(result)\r\n      })\r\n\r\n      fetch(\"/api/goals\", {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${user.token}`\r\n        }\r\n      })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        dispatch({ type: \"SET_GOALS\", payload: result })\r\n      })\r\n    }\r\n  }, [user, isLoaded, dispatch])\r\n\r\n  const goalTypeOptions = [\r\n    {\r\n      label: \"Frequency\",\r\n      value: \"frequency\"\r\n    },\r\n    {\r\n      label: \"Time\",\r\n      value: \"time\"\r\n    }\r\n  ]\r\n  \r\n  const handleChangeExercise = (e) => {\r\n    setExercise(e.value)\r\n  }\r\n\r\n  const handleChangeGoalType = (e) => {\r\n    setGoalType(e.value)\r\n  }\r\n  const handleChangeFrequency = (e) => {\r\n    setFrequency(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setError(null)\r\n\r\n    if (!exercise || !goalType || (!time && !frequency)) {\r\n      setError(\"Fields must not be empty\")\r\n      return\r\n    }\r\n\r\n    if (goalType === \"time\") {\r\n      setFrequency(null)\r\n    } else {\r\n      setTime(0)\r\n    }\r\n\r\n    const response = await fetch(\"/api/goals\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${user.token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ \r\n        exercise, \r\n        goal_type: goalType, \r\n        time, \r\n        frequency \r\n      })\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n\r\n    const result = await response.json()\r\n\r\n    if (!response.ok) {\r\n      console.log(result.error)\r\n      setError(result.error)\r\n    }\r\n    if (response.ok) {\r\n      dispatch({ type: \"CREATE_GOAL\", payload: result })\r\n      console.log(result)\r\n      e.target.reset()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container goals-container'>\r\n      <form className=\"goals\" onSubmit={handleSubmit}>\r\n        <h2>Set a new goal </h2>\r\n        <div className='form-group'>\r\n          <label> Exercise: </label>\r\n          <ExerciseSelect \r\n            onChange={handleChangeExercise}\r\n            exercises={exercises}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label> Goal Type: </label>\r\n          <Select \r\n            options={goalTypeOptions}\r\n            onChange={handleChangeGoalType}\r\n          />\r\n        </div>\r\n        {\r\n          goalType === \"time\"\r\n          &&\r\n          <TimeInput \r\n            time={time}\r\n            setTime={setTime}\r\n          />\r\n        }\r\n        {\r\n          goalType === \"frequency\"\r\n          &&\r\n\r\n          <div className='form-group time-form-group'>\r\n            <label htmlFor='time'>Weekly Goal: </label>\r\n            <input\r\n              type=\"number\"\r\n              onChange={handleChangeFrequency}\r\n              placeholder=\"# times / week\"\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n        }\r\n        <button>Set Goal</button>\r\n        {error && <div className='error'>{error}</div>}\r\n      </form>\r\n      <GoalsTable \r\n        goals={goals}\r\n        error={error}\r\n        setError={setError}\r\n        exercises={exercises}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}